{"version":3,"sources":["components/Nav.js","utils/API.js","components/Table.js","App.js","index.js"],"names":["Nav","className","axios","get","then","response","data","Table","props","componentDidMount","console","log","API","records","empdata","results","employeestemp","i","length","erecord","id","firstname","name","first","lastname","last","email","image","picture","medium","phone","cell","age","dob","push","setState","employees","state","headings","width","sorting","heading","order","sortedEmployees","filteredEmployees","sort","a","b","undefined","localeCompare","handleSearch","event","searchValue","target","value","filteredEmp","filter","folks","values","Object","join","toLowerCase","indexOf","this","map","index","src","alt","scope","type","placeholder","onChange","renderTableData","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73fc3b6a.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../index.css\"\r\n\r\nfunction Nav () {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n  <div className=\"container\">\r\n    <h1 className=\"display-4\">Staff Directory</h1>\r\n    <p className=\"lead\">Begin Typing to Look up Staff</p>\r\n  </div>\r\n</div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Nav","import axios from \"axios\"\r\n\r\nexport default {\r\n    getEmployees: function() { \r\n            return axios.get(\"https://randomuser.me/api/?results=15\"\r\n            ).then(response => {\r\n                return response.data;}\r\n                    )\r\n                \r\n    //     return axios.get(\"https://randomuser.me/api/?results=15\")\r\n    // }.then(function (response) {\r\n    //     console.log(response.data);\r\n    //     // I need this data here ^^\r\n    //     return response.data;\r\n    // })\r\n \r\n    \r\n}\r\n}\r\n","//put headings on map make the table\r\nimport React from \"react\"\r\nimport API from \"../utils/API\"\r\n\r\n\r\n\r\n//console.log(API.getEmployees());\r\n\r\nclass Table extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         employees: [],\r\n         order: \"descend\",\r\n        filteredEmployees: [{}],\r\n      };\r\n   }\r\n   componentDidMount = () => {\r\n      console.log(API.getEmployees())\r\n      API.getEmployees()\r\n         .then((records) => {\r\n            const empdata = records.results;\r\n            const employeestemp = [];\r\n            console.log(empdata)\r\n            for (let i = 0; i < empdata.length; i++) {\r\n               let erecord = {\r\n                  id: i + 1,\r\n                  firstname: empdata[i].name.first,\r\n                  lastname: empdata[i].name.last,\r\n                  email: empdata[i].email,\r\n                  image: empdata[i].picture.medium,\r\n                  phone: empdata[i].cell,\r\n                  age: empdata[i].dob.age,\r\n               };\r\n               employeestemp.push(erecord);\r\n            }\r\n            this.setState({ employees: employeestemp });\r\n            console.log(this.state.employees);\r\n         });\r\n   };\r\n\r\n   headings = [\r\n      { name: \"image\", width: \"10%\"}, \r\n      { name: \"First\", width: \"10%\"},\r\n      { name: \"Last\", width: \"10%\"},\r\n      { name: \"phone\", width: \"20%\"},\r\n      { name: \"email\", width: \"20%\"},\r\n      { name: \"dob\", width: \"10%\"}\r\n  ]\r\n\r\n  sorting = heading => {\r\n      if (this.state.order === \"descend\") {\r\n          this.setState({order: \"ascend\" })\r\n      } else {\r\n          this.setState({order: \"descend\"})}\r\n      const compare = (a,b) => {\r\n          if (this.state.order === \"ascend\") {\r\n              if (a[heading]=== undefined) {\r\n                  return 1\r\n              } else if (b[heading] === undefined) {\r\n                  return -1\r\n              } else if (heading === \"name\") {\r\n                  return a[heading].first.localeCompare(b[heading].first)\r\n              } else {\r\n                  return a[heading] -b[heading]\r\n              }\r\n          } else {\r\n              if (a[heading]=== undefined) {\r\n                  return 1\r\n              } else if (b[heading] === undefined) {\r\n                  return -1\r\n              } else if (heading === \"name\") {\r\n                  return b[heading].first.localeCompare(a[heading].first)\r\n              } else {\r\n                  return b[heading] -a[heading]\r\n              }\r\n          }\r\n      }\r\n      const sortedEmployees = this.state.filteredEmployees.sort( compare );\r\n      this.setState({\r\n          filteredEmployees: sortedEmployees\r\n      })\r\n  }\r\n\r\n  handleSearch = event => {\r\n      \r\n      //gets the actual value out of the search box\r\n      const searchValue = event.target.value\r\n      const filteredEmp = this.state.employees.filter(folks => {\r\n          //need to merge the data together to see if user input is anywhere inside\r\n          let values = Object.values(folks).join(\"\").toLowerCase()\r\n          console.log(values);\r\n          return values.indexOf(searchValue.toLowerCase())!== -1\r\n      } )\r\n      this.setState({\r\n          filteredEmployees: filteredEmp\r\n      })\r\n\r\n  }\r\n\r\n  componentDidMount({employees, filteredEmployees}){\r\n      API.getEmployees().then(response => {\r\n          console.log(\"Your Component Did mount\");\r\n          this.setState({\r\n              employees: response.data,\r\n              filteredEmployees: response.data\r\n    \r\n          })\r\n\r\n      })\r\n  }\r\n\r\n\r\n   renderTableData() {\r\n      return this.state.filteredEmployees.map((filteredEmployees, index) => {\r\n         const { image, id, firstname, lastname, age, email } = filteredEmployees //destructuring\r\n         return (\r\n\r\n\r\n            <tr key={id}>\r\n               <td><img className=\"img-responsive\" src={image} alt=\"folks\"/></td>\r\n               <td>{firstname}</td>\r\n               <td>{lastname}</td>\r\n               <td>{age}</td>\r\n               <td>{email}</td>\r\n            </tr>\r\n\r\n\r\n         )\r\n      })\r\n   }\r\n   renderHeader() {\r\n      return (this.state.headings.sort((headings, index) => {\r\n         const { image, id, firstname, lastname, age, email } = headings\r\n         return(\r\n            <div>\r\n            <tr>\r\n              <th scope=\"col\">{image}</th>\r\n                        <th scope=\"col\">{firstname}</th>\r\n                        <th scope=\"col\">{lastname}</th>\r\n                        <th scope=\"col\">{age}</th>\r\n                        <th scope=\"col\">{email}</th>\r\n                     </tr>\r\n               </div> \r\n\r\n         )\r\n\r\n        \r\n      }))\r\n   }\r\n\r\n\r\n   render() {\r\n    return(\r\n         <div>\r\n            <form className=\"form-inline\">\r\n               <div className=\"card\">\r\n                <input className=\"form-control\" type=\"search\" placeholder=\"search\"onChange={event => this.handleSearch(event)}/>\r\n                   {/* <button onClick ={event => this.handleSearch(event)}>Search</button> */}\r\n                   </div>\r\n            </form>\r\n            {/* <h1 id='title'>React Dynamic Table</h1> */}\r\n            {/* < Data /> */}\r\n            <table id='employees' className=\"table\">\r\n              \r\n                  <thead>\r\n                     <tr>\r\n                  <th scope=\"col\">image</th>\r\n                        <th scope=\"col\">firstname</th>\r\n                        <th scope=\"col\">lastname</th>\r\n                        <th scope=\"col\">age</th>\r\n                        <th scope=\"col\">email</th>\r\n                     </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                \r\n                     {/* <tr>{this.renderTableHeader()}</tr> */}\r\n                     {this.renderTableData()}\r\n                  </tbody>\r\n               </table>\r\n         </div>\r\n    )\r\n   }\r\n}\r\n\r\nexport default Table\r\n\r\n\r\n\r\n","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport Table from \"./components/Table\";\nimport \"./App.css\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n     < Nav />\n     < Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}